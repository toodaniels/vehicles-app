{"version":3,"sources":["context/index.js","components/Input/index.js","components/Register/validate.js","utils/fetch/index.js","utils/constants/index.js","components/Register/index.js","components/Login/validate.js","components/Login/index.js","components/Alert/index.js","layouts/Aside/index.js","components/CreateForm/validate.js","components/CreateForm/index.js","components/CreateMarker/index.js","components/UpdateForm/validate.js","components/UpdateForm/index.js","components/UpdateMarker/index.js","components/Map/index.js","components/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["userContext","React","createContext","Input","type","name","placeholder","onChange","onBlur","value","error","touched","classnames","message","className","required","values","errors","email","password","repeatPassword","test","API","process","request","endpoint","method","a","body","auth","headers","options","includes","JSON","stringify","_","isEmpty","fetch","requestResult","signUp","signIn","createVehicle","plate","location","token","getVehicles","updateVehicle","originalPlate","deleteVehicle","Register","props","onSubmit","setSubmitting","gotoLogin","setAlertData","result","initialValues","validate","handleChange","handleBlur","handleSubmit","isSubmitting","disabled","Login","onLogin","loginResult","status","json","user","Alert","role","Aside","context","useContext","useState","register","setRegiter","alertMessage","setAlertMessage","alertType","setAlertType","handleToRegister","gotoRegister","setUser","onClick","href","closeAside","src","width","height","alt","CreateForm","onVehicleCreated","CreateMarker","initPosition","setLocation","setError","Marker","position","draggable","ondragend","e","target","_latlng","lat","lng","icon","L","iconUrl","iconSize","Popup","initialLocation","UpdateForm","onVehicleUpdated","onDelete","onVehicleDeleted","isEqual","UpdateMaker","vehicle","coordinates","LeafletMap","vehicles","updateVehicles","creatingVehicle","setCreatingVehicle","setMessage","Map","center","zoom","TileLayer","url","attribution","map","UpdateMarker","key","_id","Home","setVehicles","vehiclesResponse","vehiclesResult","useEffect","fetchVehicles","showAside","classes","push","openAside","App","parse","localStorage","getItem","setShowAside","_user","setItem","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bc96502b.chunk.js","sourcesContent":["import React from 'react';\nconst userContext = React.createContext(); // Create a context object\n\nexport {\n  userContext // Export it so it can be used by other Components\n};","import React from 'react';\n\nfunction Input ({ type, name,placeholder, onChange, onBlur, value, error, touched, message }) {\n    const classnames = (error && touched) ?\n        \"form-control is-invalid\" :\n        (value && touched) ? \"form-control is-valid\" : \"form-control\";\n    return (\n        <div className=\"input-group mb-3\">\n            <input\n                className={classnames}\n                placeholder={placeholder}\n                type={type}\n                name={name}\n                onChange={onChange}\n                onBlur={onBlur}\n                value={value}\n                required\n            />\n            <div className=\"invalid-feedback\">\n                { error }\n            </div>\n        </div>\n    )\n}\n\nexport default Input;","\nexport default (values) => {\n    const errors = {};\n    const {email, name, password, repeatPassword} = values;\n\n    if (!email) {\n        errors.email = 'Correo es requerido';\n    } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n    ) {\n        errors.email = 'Invalid email address';\n    }\n\n    if (!name) {\n        errors.name = 'Nombre es requerido';\n    }\n\n    if (!password) {\n        errors.password = 'Contraseña es requerida';\n    }\n\n    if (!repeatPassword) {\n        errors.repeatPassword = 'La contraseña no coincide';\n    } else if (password !== repeatPassword) {\n        errors.repeatPassword = 'La contraseña no coincide';\n    }\n\n    return errors;\n}","import { signup, signin, vehicles } from '../constants';\nimport _ from 'lodash';\nconst API = process.env.REACT_APP_API;\n\nconst request = async ( endpoint ,method, body = {}, auth) =>{\n    var headers = {};\n    try {\n        let options = {\n            method\n        }\n\n        if (['POST', 'PUT'].includes(method)){\n            headers['Content-Type'] = 'application/json';\n            options = {...options, body : JSON.stringify(body)};\n        }\n        \n        if (!_.isEmpty(auth)){\n            headers['Authorization'] = `Bearer ${auth}`;\n        }\n\n\n        options = {...options, headers};\n\n        const requestResult = await fetch( API + endpoint, options);\n        \n        return requestResult;\n\n    }catch (e) {\n        return e;\n    }\n};\n\nexport const signUp = async (email, name, password) =>{\n    return await request(signup, 'POST', { email, name, password });\n};\n\nexport const signIn = async (email, password) =>{\n    return await request(signin, 'POST', { email, password });\n};\n\nexport const createVehicle = async (plate, location, token) =>{\n    return await request(vehicles, 'POST', { plate, location }, token);\n};\n\nexport const getVehicles = async (token) =>{\n    return await request(vehicles, 'GET', null, token);\n};\n\nexport const updateVehicle = async ( originalPlate ,plate, location, token) =>{\n    return await request(vehicles + `/${originalPlate}`, 'PUT', { plate, location }, token);\n};\n\nexport const deleteVehicle = async (plate, token) =>{\n    return await request(vehicles + `/${plate}` , 'DELETE', null, token);\n};","export const signup= '/api/v1/signup';\nexport const signin = '/api/v1/signin';\nexport const vehicles = '/api/v1/auth/vehicles';\n\n","import React from 'react';\nimport { Formik } from 'formik';\nimport Input from '../Input';\nimport validate from './validate';\nimport { signUp } from '../../utils/fetch';\n\nfunction Register(props) {\n    const initialValues = { email: '', password: '', name: '', repeatPassword : '' };\n\n    const onSubmit = async (values, { setSubmitting }) => {\n        const { email, name, password } = values;\n        const { gotoLogin, setAlertData } = props;\n        const result  = await signUp(email, name, password);\n        setSubmitting(false);\n        setAlertData(\"alert-success\", \"Te registraste correctamente!\");\n        gotoLogin();\n        return result;\n    };\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validate={validate}\n            onSubmit={onSubmit}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n            }) => (\n                <div className=\"login\">\n                    <form onSubmit={handleSubmit}>\n                        <h3> Registrarse </h3>\n                        <Input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Correo\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                            error={errors.email}\n                            touched={touched.email}\n                        />\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"Nombre\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.name}\n                            error={errors.name}\n                            touched={touched.name}\n                        />\n                        <Input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Contraseña\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                            error={errors.password}\n                            touched={touched.password}\n                        />\n                        <Input\n                            type=\"password\"\n                            name=\"repeatPassword\"\n                            placeholder=\"Repetir Contraseña\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.repeatPassword}\n                            error={errors.repeatPassword}\n                            touched={touched.repeatPassword}\n                        />\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            <div>Registrarme</div>\n                        </button>\n                    </form>\n                </div>\n                )}\n        </Formik>\n    )\n}\n\nexport default Register;","\nexport default (values) => {\n    const errors = {};\n    const {email, password} = values;\n\n    if (!email) {\n        errors.email = 'Correo es requerido';\n    } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n    ) {\n        errors.email = 'Invalid email address';\n    }\n\n    if (!password) {\n        errors.password = 'Contraseña es requerida';\n    }\n\n    return errors;\n}","import React from 'react';\nimport { Formik } from 'formik';\nimport validate from './validate';\nimport Input from '../Input';\nimport { signIn } from '../../utils/fetch';\n\nfunction Login (props) {\n    const initialValues = { email: '', password: '' };\n    const onSubmit = async (values, { setSubmitting }) => {\n        const { email, password } = values;\n        const { setAlertData, onLogin } =props;\n        const loginResult = await signIn(email, password);\n        if (loginResult.status !== 200) {\n            const message = await loginResult.json();\n            setAlertData(\"alert-danger\", message);\n        }else{\n            const user = await loginResult.json();\n            onLogin(user);\n        }\n        setSubmitting(false);\n    };\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validate={validate}\n            onSubmit={onSubmit}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n            }) => (\n                <div className=\"login\">\n                    <form onSubmit={handleSubmit} >\n                        <h3>Vehicles</h3>\n\n                        <Input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Correo\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                            error={errors.email}\n                            touched={touched.email}\n                        />\n                        <Input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Contraseña\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                            error={errors.password}\n                            touched={touched.password}\n                        />\n                        <button type=\"submit\" disabled={isSubmitting}>\n                            <div>Ingresar</div>\n                        </button>\n                    </form>\n                </div>\n                )}\n        </Formik>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport classnames from 'classnames';\nfunction Alert (props){\n    const { type, message } = props;\n    \n    return (\n        <div className={classnames(\"alert\", type)} role=\"alert\">\n            {message}\n        </div>\n    )\n}\n\nexport default Alert;","import React, { useState, useContext } from 'react';\nimport _ from 'lodash';\nimport { userContext } from '../../context';\nimport Register from '../../components/Register';\nimport Login from '../../components/Login';\nimport Alert from '../../components/Alert';\nfunction Aside(props) {\n    const context = useContext(userContext);\n\n    const [register, setRegiter] = useState(false); \n    const [alertMessage,  setAlertMessage] = useState(\"\");\n    const [alertType,  setAlertType] = useState(\"\");\n\n    const handleToRegister = () =>{\n        setRegiter(!register);\n    };\n    const setAlertData = (type, message) =>{\n        setAlertMessage(message);\n        setAlertType(type);\n    }\n\n    const onLogin = (user) => {\n        context.setUser(user);\n        //setHidden(true);\n    }\n\n    \n    return (\n        <aside>\n            { _.isEmpty(context.user) ?\n                <>\n                    {\n                        !register ? \n                        <Login gotoRegister={handleToRegister}  setAlertData={setAlertData} onLogin={onLogin}/>:\n                        <Register gotoLogin={handleToRegister} setAlertData={setAlertData}/>\n                    \n                    }\n                    <div className=\"link\" onClick={handleToRegister} href=\"\">\n                        {\n                            register ? \"Regresar\" : \"Registarme\"\n                        }\n                    </div>\n                    <Alert type={alertType} message={alertMessage}/>  \n                </>:\n                <>\n                    <div className=\"instructions\">\n                        <div className=\"float\" onClick={ () =>{ props.closeAside() }}>\n                            <i className=\"fas fa-times my-float\"></i>\n                        </div>\n                        <h3>\n                            Bienvenido!\n                        </h3>\n                        <h5>\n                            Crea nuevos vehiculos\n                        </h5>\n                        <ol>\n                            <li>\n                                Presiona el boton: \n                                <div className=\"float-button popup-button\"> \n                                    <i className=\"fas fa-car\"></i> <i className=\"fas fa-plus-circle float-second-icon\"></i> \n                                </div>\n                            </li>\n                            <li>\n                                Arrastra el: \n                                <img className=\"icon\" src=\"https://img.icons8.com/officel/2x/car.png\" width={38} height={40} alt=\"car icon\"/>\n                                para asignarle su nueva localización.\n                            </li>\n                            <li>\n                                Asigna un número de placa y presiona: \n                                <div className=\"float-button popup-button\"> \n                                    <i className=\"fas fa-save\"></i>\n                                </div>\n                                para guardar los cambios\n                            </li>\n                        </ol>\n                        <h5>\n                           Actualiza y elimina vehiculos\n                        </h5>\n                        <ol>\n                            <li>\n                                Presiona o arrastra los:\n                                <img className=\"icon\" src=\"https://img.icons8.com/plasticine/2x/car.png\" width={38} height={40} alt=\"car icon\"/>                                \n                            </li>\n                            <li>\n                                Asigna un nuevo número de placa o localización y presiona: \n                                <div className=\"float-button popup-button\"> \n                                    <i className=\"fas fa-save\"></i>\n                                </div>\n                                para guardar los cambios\n                            </li>\n                            <li>\n                                Presiona el:  \n                                <div className=\"float-button popup-button\"> \n                                    <i className=\"fas fa-trash\"></i>\n                                </div> \n                                para eliminar el vehiculo\n                            </li>\n                        </ol>\n                        <div>\n                            \n                        </div>\n\n                    </div>\n                </>\n            }\n        </aside>\n        \n    )\n}\n\nexport default Aside;","\nexport default (values) => {\n    const errors = {};\n    const {plate} = values;\n\n    if (!plate) {\n        errors.plate = 'La placa es requerida es requerida';\n    }\n\n    return errors;\n}","import React, {useContext} from 'react';\nimport _ from 'lodash';\nimport { Formik } from 'formik';\nimport Input from '../Input';\nimport validate from './validate';\nimport { createVehicle } from '../../utils/fetch';\nimport { userContext } from '../../context';\n\n\nfunction CreateForm (props) {\n    const context = useContext(userContext);\n    const initialValues = { plate: '' };\n    const onSubmit = async (values, { setSubmitting }) => {\n        const { plate } = values;\n        const { location, onVehicleCreated, setAlertData } = props;\n        const createVechicleResult = await createVehicle(plate, location, context.user.token);\n        if (createVechicleResult.status !== 201) {\n            setAlertData(\"Ya existe esa placa\");\n            return ;\n        }\n        setAlertData(\"\");\n        setSubmitting(false);\n        onVehicleCreated(true);\n    };\n    \n    return (\n        <Formik\n            initialValues={initialValues}\n            validate={validate}\n            onSubmit={onSubmit}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n            }) => (\n                    <form onSubmit={handleSubmit}>\n                        <h5>Creando nuevo vehiculo</h5>\n                        <Input\n                            type=\"text\"\n                            name=\"plate\"\n                            placeholder=\"Placa\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.plate}\n                            error={errors.plate}\n                            touched={touched.plate}\n                        />\n                        <div>\n                            Location : {\n                                JSON.stringify(props.location)\n                            }\n                        </div>\n                        <button \n                            type=\"submit\" \n                            className=\"popup-button\" \n                            disabled={isSubmitting || _.isEmpty(values.plate) || _.isEmpty(props.location) }>\n                            <i className=\"fas fa-save\"></i> \n                        </button>\n                        <div className=\"float-button popup-button\" onClick={() => {props.onVehicleCreated(false)}}>\n                            <i className=\"fas fa-times float-second-icon\"></i> \n                        </div>\n                    </form>\n                )}\n        </Formik>\n    )\n}\n\nexport default CreateForm;\n","import React, {useState} from 'react';\nimport _ from 'lodash';\nimport L from 'leaflet';\nimport { Marker, Popup } from 'react-leaflet';\nimport CreateForm from '../CreateForm';\n\nfunction CreateMarker (props) {\n    const [location, setLocation] = useState(props.initPosition);\n    const [error, setError] = useState(\"\")\n    return (\n        <Marker position={props.initPosition} \n            draggable={true}\n            ondragend={(e) => { \n                const {lat, lng} = e.target._latlng;\n                setLocation([lat, lng]) \n            }}\n            icon={L.icon({\n                iconUrl: 'https://img.icons8.com/officel/2x/car.png',\n                iconSize: [38, 40], \n            })}\n            >\n            <Popup>\n                <CreateForm \n                    location={location} \n                    initialLocation={props.initPosition}\n                    onVehicleCreated={props.onVehicleCreated} \n                    setAlertData={setError}\n                />\n                { !_.isEmpty(error) && <div className=\"alert alert-danger\" role=\"alert\">\n                    {JSON.stringify(error)}\n                </div>}\n            </Popup>\n        </Marker>\n    )\n}\n\nexport default CreateMarker;","\nexport default (values) => {\n    const errors = {};\n    const {plate} = values;\n\n    if (!plate) {\n        errors.plate = 'La placa es requerida es requerida';\n    }\n\n    return errors;\n}","import React, {useContext} from 'react';\nimport _ from 'lodash';\nimport { Formik } from 'formik';\nimport Input from '../Input';\nimport validate from './validate';\nimport { updateVehicle, deleteVehicle } from '../../utils/fetch';\nimport { userContext } from '../../context';\n\n\nfunction UpdateForm (props) {\n    const context = useContext(userContext);\n    const initialValues = { plate: props.plate };\n    const onSubmit = async (values, { setSubmitting }) => {\n        const { plate } = values;\n        const { location, onVehicleUpdated, setAlertData } = props;\n        const createVechicleResult = await updateVehicle( props.plate, plate, location, context.user.token);\n        if (createVechicleResult.status !== 204) {\n            setAlertData(\"Ya existe esa placa\");\n            return ;\n        }\n        setAlertData(\"\");\n        setSubmitting(false);\n        onVehicleUpdated(true);\n    };\n\n    const onDelete = async () => {\n        const { onVehicleDeleted, setAlertData, plate } = props;\n        const createVechicleResult = await deleteVehicle( plate, context.user.token);\n        if (createVechicleResult.status !== 204) {\n            setAlertData(\"Ocurrió un error\");\n            return ;\n        }\n        setAlertData(\"\");\n        onVehicleDeleted(true);\n    };\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validate={ validate }\n            onSubmit={onSubmit}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n            }) => (\n                    <form onSubmit={handleSubmit}>\n                        <h5>Actualizar vehiculo</h5>\n                        <Input\n                            type=\"text\"\n                            name=\"plate\"\n                            placeholder=\"Placa\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.plate}\n                            error={errors.plate}\n                            touched={touched.plate}\n                        />\n                        <div>\n                            Locación  Actual: {\n                                JSON.stringify(props.location)\n                            }\n                        <div>\n                        </div>\n                            Locación  Inicial: {\n                                JSON.stringify(props.initialLocation)\n                            }\n                        </div>\n                        <button \n                            type=\"submit\" \n                            className=\"popup-button\" \n                            disabled={\n                                isSubmitting || \n                                (_.isEqual(props.location, props.initialLocation) &&\n                                _.isEqual(values.plate, props.plate))\n                            }\n                        >\n                            <i className=\"fas fa-save\"></i> \n                        </button>\n                        <div className=\"float-button popup-button\" onClick={onDelete}>\n                            <i className=\"fas fa-trash float-second-icon\"></i> \n                        </div>\n                    </form>\n                )}\n        </Formik>\n    )\n}\n\nexport default UpdateForm;\n","import React, {useState} from 'react';\nimport _ from 'lodash';\nimport L from 'leaflet';\nimport { Marker, Popup } from 'react-leaflet';\nimport UpdateForm from '../UpdateForm';\n\nfunction UpdateMaker (props) {\n    const {vehicle} = props;\n    const [location, setLocation] = useState(vehicle.location.coordinates);\n    const [error, setError] = useState(\"\")\n\n    return (\n        <Marker position={vehicle.location.coordinates} \n            draggable={true}\n            ondragend={(e) => { \n                const {lat, lng} = e.target._latlng;\n                setLocation([lat, lng]) \n            }}\n            icon={L.icon({\n                iconUrl: 'https://img.icons8.com/plasticine/2x/car.png',\n                iconSize: [38, 40], \n            })}\n            >\n            <Popup>\n                <UpdateForm \n                    location={location} \n                    initialLocation={vehicle.location.coordinates}\n                    plate={vehicle.plate}\n                    onVehicleUpdated={props.onVehicleUpdated} \n                    onVehicleDeleted={props.onVehicleDeleted}\n                    setAlertData={setError}\n                />\n                { !_.isEmpty(error) && <div className=\"alert alert-danger\" role=\"alert\">\n                    {JSON.stringify(error)}\n                </div>}\n            </Popup>\n        </Marker>\n    )\n}\n\nexport default UpdateMaker;","import React, { useState } from 'react'\nimport _ from 'lodash';\nimport Control from 'react-leaflet-control';\nimport { Map, TileLayer } from 'react-leaflet';\n\nimport CreateMarker from '../CreateMarker';\nimport UpdateMarker from '../UpdateMarker';\n\nconst position = [19.432608, -99.133209]\nconst LeafletMap = (props) => {\n  const { vehicles, updateVehicles } = props;\n  const [creatingVehicle, setCreatingVehicle] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n\n  const onVehicleCreated = (status) =>{\n    setCreatingVehicle(false);\n    updateVehicles();\n    if (status) {\n      setMessage(\"Creado Correctamente\")\n    }\n  } \n\n  const onVehicleUpdated = (status) =>{\n    updateVehicles();\n    if (status) {\n      setMessage(\"Actualizado Correctamente\")\n    }\n  } \n\n  const onVehicleDeleted = (status) =>{\n    updateVehicles();\n    if (status) {\n      setMessage(\"Eliminado Correctamente\")\n    }\n  } \n\n  return (\n    <div className=\"map\">\n        <Map center={position} zoom={13}>\n            <TileLayer\n              url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n              attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n            />\n            \n            {creatingVehicle &&  \n              <CreateMarker \n                initPosition={position} \n                onVehicleCreated={onVehicleCreated}\n              />\n            } \n\n            {\n              vehicles.map((vehicle) =>(\n                <UpdateMarker \n                  key={vehicle._id}\n                  vehicle={vehicle} \n                  onVehicleUpdated={onVehicleUpdated}\n                  onVehicleDeleted={onVehicleDeleted}\n                />\n              ))\n            }\n                \n\n            <Control position=\"topright\" >\n              <div className=\"float-button-group\" onClick={()=> setCreatingVehicle(true)}>\n                <div className=\"float-button\">\n                  <i className=\"fas fa-car\"></i> <i className=\"fas fa-plus-circle float-second-icon\"></i> \n                </div>\n              </div>\n            </Control>\n\n            <Control position=\"bottomright\" >\n              { !_.isEmpty(message) &&\n                <div className=\"alert alert-success\" role=\"alert\">\n                  {message} <i className=\"fas fa-times\" onClick={() => {setMessage(\"\")}}></i>\n                </div>\n              }\n            </Control>\n\n        </Map>\n    </div>\n  )\n}\n\nexport default LeafletMap;","import React, { useContext, useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport LeafletMap from '../Map';\nimport { userContext } from '../../context';\nimport { getVehicles } from '.././../utils/fetch';\n\nfunction Home (props) {\n    const context = useContext(userContext);\n    const [vehicles, setVehicles] = useState([]);\n\n    const updateVehicles = async ()=>{\n        const vehiclesResponse = await getVehicles(context.user.token);\n        const vehiclesResult = await vehiclesResponse.json();\n        setVehicles(vehiclesResult);\n    }\n\n    const onLogout = () =>{\n        context.setUser({});\n    }\n\n    useEffect(() =>{\n        const fetchVehicles = async ()=>{\n            const vehiclesResponse = await getVehicles(context.user.token);\n            const vehiclesResult = await vehiclesResponse.json();\n            setVehicles(vehiclesResult);\n        }\n        fetchVehicles();\n    }, [ context.user.token ]);\n\n    const {showAside} = props;\n    let classes = [\"home\"];\n\n    if (showAside) {\n        classes.push(\"home-margin\");\n    }\n    \n    return (\n        <div className={classnames(classes)}>\n            <nav className=\"navbar\">\n                <div className=\"navbar-brand\" onClick={() =>{props.openAside()}}>\n                    <div>\n                        { !showAside ? <i className=\"far fa-question-circle\"></i> :\n                            <i className=\"fa fa-times\"></i> \n                        } Vehiculos \n                    </div>\n                </div>\n\n                <div className=\"logout\" onClick={onLogout}>\n                    <i className=\"fas fa-car-side\"></i> {context.user.email} <i className=\"fas fa-sign-out-alt\"></i>\n                </div>\n            </nav>\n            <LeafletMap vehicles={vehicles} updateVehicles={updateVehicles}/>\n        </div>\n    )\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { userContext } from './context';\nimport _ from 'lodash';\nimport './App.css';\nimport Aside from './layouts/Aside';\nimport Home from './components/Home';\n\nfunction App() {\n  const [ user, setUser ] = useState(\n    JSON.parse(localStorage.getItem(\"user\"))\n  );\n\n  const [showAside, setShowAside] = useState(false);\n\n  const persistUser = (_user)=>{\n    setUser(_user);\n    localStorage.setItem(\"user\", JSON.stringify(_user));\n  };\n\n  const value = {\n    user,\n    setUser : persistUser\n  };\n\n\n  const openAside = () =>{\n    setShowAside(!showAside);\n  }\n\n  const closeAside = () =>{\n    setShowAside(false);\n  }\n\n  return (\n    <userContext.Provider value={value}>\n      <div className=\"float\" onClick={ () =>{setShowAside (true)}}>\n        <i className=\"fas fa-bars my-float\"></i>\n      </div>\n      {\n        (showAside || _.isEmpty(user)) && <Aside closeAside={closeAside}/>\n      }\n\n      { !_.isEmpty(user) ?\n        <Home showAside={showAside} openAside={openAside}/>:\n        <div className=\"home empty\"></div>\n      }\n\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}